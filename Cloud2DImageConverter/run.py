# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/03_run.ipynb.

# %% auto 0
__all__ = ['FOV_UP', 'FOV_DOWN', 'WIDTH', 'HEIGHT', 'IS_LABEL', 'FOLDER_PATH', 'VELODYNE_PATH', 'LABEL_PATH', 'RESULTS_FOLDER',
           'BATCH_SIZE', 'MAX_LEN', 'printando', 'main']

# %% ../nbs/03_run.ipynb 1
from . import spherical_projection as sp
from . import image_generator as ig
from . import d

# %% ../nbs/03_run.ipynb 3
FOV_UP = 3.0
FOV_DOWN = -25.0
WIDTH = 1024
HEIGHT = 64

# %% ../nbs/03_run.ipynb 5
IS_LABEL = True
FOLDER_PATH = "point_clouds/semantic_kitti/"
VELODYNE_PATH = FOLDER_PATH + "velodyne"
LABEL_PATH = FOLDER_PATH + "labels" if IS_LABEL else None
RESULTS_FOLDER = "results/"

# %% ../nbs/03_run.ipynb 7
BATCH_SIZE = 500
MAX_LEN = len(os.listdir(VELODYNE_PATH))
if BATCH_SIZE > MAX_LEN: 
    BATCH_SIZE = MAX_LEN-1

# %% ../nbs/03_run.ipynb 9
def printando():
    print(BATCH_SIZE)
    print(FOLDER_PATH)
    print(MAX_LEN)
    print(FOV_UP)

def main():
    for batch in tqdm(range(BATCH_SIZE, MAX_LEN, BATCH_SIZE), desc="Batch:"):
        start, end = ig.define_range(batch, BATCH_SIZE, MAX_LEN)
        velodyne_list = sorted(os.listdir(VELODYNE_PATH))[start:end]
        if IS_LABEL: label_list = sorted(os.listdir(LABEL_PATH))[start:end]
        point_cloud = d.load_data(VELODYNE_PATH, velodyne_list, LABEL_PATH, label_list)
        projection_dict = d.do_projection(point_cloud)
        d.create_images(projection_dict)
